// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Pingjata.Persistence;

#nullable disable

namespace Pingjata.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Pingjata.Persistence.Models.ChannelEntity", b =>
                {
                    b.Property<string>("ChannelId")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<int>("CurrentCounter")
                        .HasColumnType("integer")
                        .HasColumnName("current_counter");

                    b.Property<string>("GreetingMessage")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("greeting");

                    b.Property<DateTime?>("RoundEndedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("round_ended_at");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea")
                        .HasColumnName("row_version");

                    b.Property<int>("Threshold")
                        .HasColumnType("integer")
                        .HasColumnName("current_threshold");

                    b.Property<string>("ThresholdRange")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("threshold_range");

                    b.Property<string>("WinnerId")
                        .HasColumnType("text")
                        .HasColumnName("winner_id");

                    b.HasKey("ChannelId");

                    b.ToTable("channels", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
